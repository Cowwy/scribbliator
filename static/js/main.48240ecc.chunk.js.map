{"version":3,"sources":["images/scribbliatorLogo.png","component/navigationBar.jsx","common/h1Title.jsx","common/loginComp.jsx","common/footer.jsx","component/form.jsx","compService/encryptionService.js","compService/storageService.js","compService/errorService.js","compService/scribbliatorService.js","component/login.jsx","common/splash.jsx","component/home.jsx","common/registerComp.jsx","component/register.jsx","comPage/landingPage.jsx","component/navigationMember.jsx","component/profile.jsx","component/setting.jsx","component/scribbliator.jsx","comPage/memberPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavigationBar","appTitle","this","props","className","to","src","Logo","alt","type","data-toggle","data-target","id","Component","H1Title","title","LoginComp","state","errors","onSubmit","onChange","username","password","placeholder","value","Footer","Form","data","validate","e","error","Joi","schema","abortEarly","customError","validateCustomCheck","details","item","path","msg","message","validateProperty","field","changeHandler","input","currentTarget","errorMsg","setState","submitHandler","preventDefault","submitForm","React","EncryptBasic","output","i","length","String","fromCharCode","charCodeAt","DecryptBasic","set","key","localStorage","setItem","JSON","stringify","get","getItem","clear","getAllKeys","appName","Object","keys","filter","match","removeUser","user","removeItem","createJoiError","_message","_path","_type","context","invalids","label","_checkDuplicateUsername","_username","$storage","_checkDuplicateEmail","_email","email","parse","createKey","_data","$config","version","createRecord","date","Date","yy","getFullYear","dd","getDate","mm","getMonth","Error","$encode","validateDuplicateUsername","userList","$joiErr","validateDuplicateEmail","validateCredential","_password","userKey","emailError","passError","isUserLogin","setUserLogin","logoutUser","LoginForm","string","required","min","$appStat","window","location","reload","Fragment","Splash","Homepage","RegisterComp","RegisterForm","regex","$appState","a","async","history","recordID","recordData","LandingPage","component","NavigationBarMember","logout","onClick","ProfilePage","SettingPage","ScribbliatorApp","MemberPage","App","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48240ecc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/scribbliatorLogo.8b3ffbd6.png\";","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Logo from '../images/scribbliatorLogo.png';\r\n\r\n\r\nclass NavigationBar extends Component {\r\n    render( ) {\r\n        const { appTitle } = this.props;\r\n\r\n        return (\r\n            <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\r\n                <NavLink className=\"navbar-brand\" to=\"/\">\r\n                    <img className=\"main-logo\" src={Logo} alt={`${appTitle} Homepage`}/>\r\n                </NavLink>\r\n\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mainNav\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"mainNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/register\">Sign Up</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavigationBar;","import React, { Component } from 'react';\r\n\r\nclass H1Title extends Component {\r\n    render( ) {\r\n        const { title } = this.props;\r\n\r\n        return( \r\n            <h1 className=\"appTitle\">{title}</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default H1Title;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass LoginComp extends Component {\r\n    state = {\r\n        errors : {}\r\n    };\r\n\r\n    \r\n\r\n    render( ) {\r\n        const { errors, onSubmit, onChange } = this.props;\r\n        const { username, password } = errors;\r\n\r\n        return( \r\n            <div className=\"row\">\r\n                <div className=\"col-lg\"></div>\r\n                <div className=\"col-lg-5\">\r\n                    <form onSubmit={onSubmit}>\r\n                        <div className=\"form-group row\">                                        \r\n                            <div className=\"col-sm-12\">\r\n                                <input \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Email\" \r\n                                    type=\"text\" \r\n                                    id=\"username\" \r\n                                    onChange={onChange}\r\n                                />\r\n                                { username && <div className=\"alert alert-danger text-left\">{username}</div> }\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-12\">\r\n                                <input \r\n                                    type=\"password\" \r\n                                    className=\"form-control\" \r\n                                    id=\"password\" \r\n                                    placeholder=\"Password\"\r\n                                    onChange={onChange}\r\n                                />\r\n                                { password && <div className=\"alert alert-danger text-left\">{password}</div> }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-12\">\r\n                                <button \r\n                                    className=\"w-100 btn btn-primary\" \r\n                                    type=\"submit\" \r\n                                    value=\"Login\">Login\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-12 white-shadow\">\r\n                                <Link to=\"/\">Forgot Password?</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-lg\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginComp;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render( ) {\r\n        return(\r\n            <footer className=\"main-footer white-shadow\">\r\n                Copyright &copy; 2020 | Scribbliator | Designed By: Frankie Law\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Joi from 'joi-browser';\r\n\r\n// ====================\r\n//  ABSCTRACTION NOTE:\r\n//  submitForm( )\r\n//  customValidation( )\r\n//\r\n//  YOU WILL NEED TO WRITE YOUR OWN \r\n//  IF YOU ARE EXTEND FROM THIS CLASS.\r\n//\r\n//\r\nclass Form extends React.Component {\r\n    state = {\r\n        data   : {},\r\n        errors : {}\r\n    };\r\n \r\n    //THIS METHOD VALIDATES EVERYTHING\r\n    //EITHER THERE IS 1 ERROR OR NO ERROR\r\n    validate = ( e ) => {\r\n        //VALIDATE ALL INPUT\r\n        const options   = { abortEarly: false };\r\n        let { error } = Joi.validate( this.state.data, this.schema, options );\r\n\r\n        const customError = this.validateCustomCheck( );        //ABSTRACTION\r\n\r\n\r\n        // CHECK FOR CUSTOMIZED ERRORS\r\n        if( customError && !error ) {\r\n            error = {};\r\n            error.details = [customError];\r\n        }\r\n        \r\n        if( !error ) return null;\r\n        else {\r\n            let errors = {};\r\n\r\n            for( let item of error.details ) {\r\n                const path = item.path;\r\n                const msg  = item.message;\r\n\r\n                errors[path] = msg;\r\n            }\r\n\r\n            return errors;\r\n        }\r\n    }\r\n\r\n\r\n    validateProperty = ( { id, value } ) => {\r\n        const field  = { [id] : value };\r\n        const schema = { [id] : this.schema[id] };\r\n        const { error } = Joi.validate( field, schema );\r\n\r\n        return error ? error.details[0].message : null;\r\n    }\r\n\r\n    changeHandler = ( { currentTarget : input } ) => {\r\n        // RETRIEVE CURRENT STATE DATA\r\n        const errors = { ...this.state.errors };\r\n        const data   = { ...this.state.data };\r\n\r\n        //VALIDATE INPUT\r\n        const errorMsg = this.validateProperty( input );  //Contains one specific message\r\n\r\n        // CHECK FOR ERRORS\r\n        if( errorMsg ) errors[ input.id ] = errorMsg;\r\n        else delete errors[ input.id ];\r\n\r\n        // TRANSFER STATE DATA\r\n        data[input.id] = input.value;\r\n\r\n        // SETSTATE FOR BOTH DATA AND ERRORS\r\n        this.setState( { data, errors } );\r\n    }\r\n\r\n    submitHandler = ( e ) => {\r\n        e.preventDefault( );\r\n        const errors = this.validate( e );\r\n        this.setState( { errors : errors || {} } ); //ERRORS TRUSEY OR GIVE EMPTY OBJECT\r\n\r\n        if( errors ) return;\r\n\r\n        this.submitForm( ); //ABSTRACTION\r\n    }\r\n}\r\n\r\nexport default Form;","// =================================================\r\n//  Encryption Service\r\n//  Encode password specifically locally providing\r\n//    small degree of protection.\r\n//\r\nfunction EncryptBasic( value ) {\r\n    let output = \"\";\r\n\r\n    for( let i = 0; i < value.length; i++ ) {\r\n        output += String.fromCharCode(value.charCodeAt(i) + 5);\r\n    }\r\n\r\n      return output;\r\n}\r\n\r\nfunction DecryptBasic( value ) {\r\n    let output = \"\";\r\n\r\n    for( let i = 0; i < value.length; i++ ) {\r\n        output += String.fromCharCode(value.charCodeAt(i) - 5);\r\n    }\r\n    return output;\r\n}\r\n\r\n\r\nexport default {\r\n    EncryptBasic,\r\n    DecryptBasic\r\n};\r\n","// =================================================\r\n//  Storage Service\r\n//  Provides Local Storage utilities.\r\n//\r\nfunction set( key, value ) {\r\n    localStorage.setItem( key, JSON.stringify( value ) );\r\n}\r\n\r\nfunction get( key ) {\r\n    return localStorage.getItem( key );\r\n}\r\n\r\nfunction clear( ) {\r\n    localStorage.clear( );\r\n}\r\n\r\nfunction getAllKeys( appName ) {\r\n    return Object.keys( localStorage ).filter( key => {\r\n        return key.match( appName );\r\n    });\r\n}\r\n\r\nfunction removeUser( user ) {\r\n    localStorage.removeItem( user );\r\n}\r\n\r\nexport default {\r\n    set,\r\n    get,\r\n    clear,\r\n    getAllKeys,\r\n    removeUser\r\n};","// =================================================\r\n//  JOI Custom Error Service\r\n//\r\n\r\nfunction createJoiError( _message, _path, _type ) {\r\n    const customError = {\r\n        message: _message,\r\n        path: [_path],\r\n        type: _type,\r\n        context: { value : \"\", invalids: [\"\"], key: _path, label: _path }\r\n    };\r\n\r\n    return customError;\r\n}\r\n\r\nexport default {\r\n    createJoiError\r\n};","import $config  from '../config';\r\nimport $encode  from './encryptionService';\r\nimport $storage from './storageService';\r\nimport $joiErr  from './errorService';\r\n\r\n// =================================================\r\n//  Scribbliator Service\r\n//  Application specific details.\r\n//     Local Storage Key    => createKey( data )\r\n//     Local Storage Record => createData( data )\r\n//\r\nfunction createKey( _data ) {\r\n    const { username } = _data;\r\n    const { appName, version } = $config;\r\n    return `${appName}-${version}-${username}`;\r\n}\r\n\r\nfunction createRecord( _data ) {\r\n    const { email, username, password } = _data;\r\n    const date = new Date( );\r\n    const yy = date.getFullYear( );\r\n    const dd = date.getDate( );\r\n    const mm = date.getMonth( ) + 1;\r\n\r\n    if( _checkDuplicateUsername( username ).length >= 1 ) {\r\n        return new Error( \"Duplicate Username\" );\r\n    }\r\n\r\n    return {\r\n        username       : username,\r\n        password       : $encode.EncryptBasic( password ),\r\n        email          : email,\r\n        'date-created' : `${yy}-${mm}-${dd}`\r\n    };\r\n}\r\n\r\nfunction _checkDuplicateUsername( _username ) {\r\n    if( _username === \"\" ) { return null; }\r\n    \r\n    const keys = $storage.getAllKeys( \"Scribbliator\" );\r\n\r\n    return keys.filter( key => {\r\n        return key.match( _username );\r\n    });\r\n}\r\n\r\nfunction _checkDuplicateEmail( _email ) {\r\n    if( _email === \"\" ) { return null; }\r\n\r\n    const keys = $storage.getAllKeys( \"Scribbliator\" );\r\n\r\n    return keys.filter( key => {\r\n        const email = JSON.parse( $storage.get( key ) ).email;\r\n        return _email === email;\r\n    });\r\n}\r\n\r\n\r\nfunction validateDuplicateUsername( _data ) {\r\n    const { username } = _data;\r\n    const userList  = _checkDuplicateUsername( username );\r\n\r\n    const customError = \r\n        $joiErr.createJoiError( \r\n            `Duplicate username ${username} found.`,\r\n            \"username\",\r\n            \"username duplicate\" \r\n        );\r\n    \r\n    if( !userList || userList.length === 0 ) { \r\n        return;\r\n    } else {\r\n        return customError;\r\n    }\r\n}\r\n\r\nfunction validateDuplicateEmail( _data ) {\r\n    const { email } = _data;\r\n    const userList = _checkDuplicateEmail( email );\r\n\r\n    const customError = \r\n        $joiErr.createJoiError( \r\n            `Duplicate email ${email} found.`,\r\n            \"email\",\r\n            \"email duplicate\" \r\n        );\r\n\r\n    if( !userList || userList.length === 0 ) { \r\n        return;\r\n    } else {\r\n        return customError;\r\n    }\r\n}\r\n\r\nfunction validateCredential( _email, _password ) {\r\n    const userKey = _checkDuplicateEmail( _email );     //Check if email exist\r\n\r\n    const emailError = \r\n        $joiErr.createJoiError( \r\n            `Email address not found`,\r\n            \"username\",\r\n            \"Email Address not found\" \r\n        );\r\n\r\n    const passError = \r\n        $joiErr.createJoiError(\r\n            `Invalid email and password`,\r\n            `password`,\r\n            `Invalid email and password`\r\n        );\r\n\r\n    if( userKey.length ) {\r\n        const { password } = JSON.parse( $storage.get( userKey ) );\r\n        const decryptPass = $encode.DecryptBasic( password );\r\n\r\n        return ( decryptPass === _password ) ? null : passError;\r\n\r\n    } else  {\r\n        return emailError;\r\n    } \r\n}\r\n\r\n//Check if there is a <userToken> registered in local storage.\r\nfunction isUserLogin( ) {\r\n    return $storage.get( \"userToken\" ) ? true : false;\r\n}\r\n\r\n//Set userToken\r\nfunction setUserLogin( _data ) {\r\n    $storage.set('userToken', _checkDuplicateEmail( _data.username ) );\r\n}\r\n\r\n//Log out user by removing local storage credentials.\r\nfunction logoutUser( ) {\r\n    $storage.removeUser( \"userToken\" );\r\n}\r\n\r\nexport default {\r\n    createKey,                      //REGISTER || LOGIN\r\n    createRecord,                   //REGISTER\r\n    validateDuplicateUsername,      //REGISTER\r\n    validateDuplicateEmail,         //REGISTER\r\n    validateCredential,             //LOGIN\r\n    isUserLogin,                    //LOGIN\r\n    setUserLogin,                   //LOGIN\r\n    logoutUser                      //MEMBER AREA\r\n};","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\n\r\nimport H1Title from '../common/h1Title';\r\nimport LoginComp from '../common/loginComp';\r\nimport Footer from '../common/footer';\r\nimport Form from  './form';\r\n\r\nimport $appStat from '../compService/scribbliatorService';\r\n\r\nclass LoginForm extends Form {\r\n    state = {\r\n        data : { username : \"\", password : \"\" },\r\n        errors : {}\r\n    };\r\n\r\n    schema = {\r\n        username : Joi.string( ).email( ).required( ),\r\n        password : Joi.string( ).min(6).required( )\r\n    };\r\n\r\n    submitForm = ( ) => {\r\n        $appStat.setUserLogin( this.state.data );\r\n        window.location.reload( );\r\n    }\r\n\r\n    validateCustomCheck = ( ) => {\r\n        //CHECK USERNAME AND PASSWORD HERE\r\n        //IF FAILED RETURN A CUSTOM ERROR HERE\r\n        const { username : email, password } = this.state.data;\r\n        const error = $appStat.validateCredential( email, password );\r\n\r\n        return error;\r\n    }\r\n\r\n    render( ) {\r\n        return(\r\n            <React.Fragment>\r\n                <H1Title title=\"Login\" />\r\n\r\n                <LoginComp \r\n                    errors={this.state.errors}\r\n                    onSubmit={this.submitHandler}\r\n                    onChange={this.changeHandler}\r\n                />\r\n\r\n                <Footer /> \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import React, { Component } from 'react';\r\n\r\nclass Splash extends Component {\r\n    render( ) {        \r\n        return( \r\n            <div className=\"row\">\r\n                <div className=\"col-lg\"></div>\r\n                <div className=\"col-lg-8\">\r\n                    <p className=\"slogan white-shadow\">\r\n                        100% Privacy with Web Notebook.<br/>\r\n                        Local friendly notebook organizer\r\n                    </p>\r\n                </div>\r\n                <div className=\"col-lg\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Splash;","import React, { Component } from 'react';\r\n\r\nimport Footer from '../common/footer';\r\nimport Splash from '../common/splash';\r\nimport H1Title from '../common/h1Title';\r\n\r\nclass Homepage extends Component {\r\n    render( ) {        \r\n        return( \r\n            <React.Fragment>\r\n                <H1Title title=\"Scribbliator\" />\r\n                \r\n                <Splash />\r\n\r\n                <Footer /> \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Homepage;","import React, { Component } from 'react';\r\n\r\nclass RegisterComp extends Component {\r\n    render( ) {\r\n        const { errors, onSubmit, onChange } = this.props;\r\n        const { email, password, username } = errors;\r\n\r\n        return( \r\n            <div className=\"row\">\r\n                <div className=\"col-lg\"></div>\r\n                <div className=\"col-lg-5\">\r\n                    <form onSubmit={onSubmit}>\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-12\">\r\n                                <input \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Username\" \r\n                                    type=\"text\" \r\n                                    id=\"username\" \r\n                                    onChange={onChange}\r\n                                />\r\n                                { username && <div className=\"alert alert-danger text-left\">{username}</div> }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">                                        \r\n                            <div className=\"col-sm-12\">\r\n                                <input \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Email\" \r\n                                    type=\"text\" \r\n                                    id=\"email\" \r\n                                    onChange={onChange}\r\n                                />\r\n                                { email && <div className=\"alert alert-danger text-left\">{email}</div> }\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-12\">\r\n                                <input \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Password\" \r\n                                    type=\"password\" \r\n                                    id=\"password\" \r\n                                    onChange={onChange}\r\n                                />\r\n                                { password && <div className=\"alert alert-danger text-left\">{password}</div> }\r\n                            </div>\r\n                        </div>                        \r\n\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-12\">\r\n                                <button type=\"submit\" className=\"w-100 btn btn-primary\" value=\"Login\">Sign Up</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-12 text-left white-shadow\">\r\n                                By clicking Sign Up, you agree to our Terms and that you have \r\n                                read our Data Use Policy, including our Cookie Use.\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-lg\">\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterComp;","import React, { Component } from 'react';\r\nimport Joi          from 'joi-browser';\r\n\r\nimport H1Title      from '../common/h1Title';\r\nimport RegisterComp from '../common/registerComp';\r\nimport Footer       from '../common/footer';\r\nimport Form         from './form';\r\n\r\nimport $storage     from '../compService/storageService';\r\nimport $appState    from '../compService/scribbliatorService';\r\n\r\n\r\nclass RegisterForm extends Form {\r\n    state = {\r\n        data : { email : \"\", username : \"\", password : \"\" },\r\n        errors : {}\r\n    };\r\n\r\n    schema = {\r\n        email    : Joi.string( ).email( ).required( ),\r\n        username : Joi.string( ).regex(/^[a-zA-Z]+$/).required( ),\r\n        password : Joi.string( ).min(6).required( )\r\n    };\r\n\r\n    validateCustomCheck = ( ) => {\r\n        return $appState.validateDuplicateEmail( this.state.data ) \r\n            || $appState.validateDuplicateUsername( this.state.data );\r\n    }\r\n\r\n    submitForm = async ( ) => {\r\n        const { history : redirect } = this.props;\r\n\r\n        //Local Storage Key -> <scribbliator-<version>-<username>\r\n        const recordID = $appState.createKey( this.state.data );\r\n\r\n        //Local Storage Data -> Data\r\n        const recordData = $appState.createRecord( this.state.data );\r\n        \r\n        //setItem into localStorage\r\n        $storage.set( recordID, recordData );\r\n        $storage.set( \"userToken\", recordID );\r\n        \r\n        window.location.reload( );      \r\n    }\r\n\r\n    render( ) {\r\n        return( \r\n            <React.Fragment>\r\n                <H1Title title=\"Sign Up\" />\r\n\r\n                <RegisterComp \r\n                    errors={this.state.errors}\r\n                    onSubmit={this.submitHandler}\r\n                    onChange={this.changeHandler}\r\n                />\r\n\r\n                <Footer />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterForm;","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport NavigationBar from '../component/navigationBar';\r\nimport LoginForm from '../component/login';\r\nimport Homepage from '../component/home';\r\nimport RegisterForm from '../component/register';\r\n\r\nclass LandingPage extends Component {\r\n    render( ) {\r\n        return (\r\n            <React.Fragment>\r\n                <NavigationBar appTitle={`Scribbliator`} /> \r\n\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col splash-screen\">\r\n                    <div className=\"scribbliator-homepage\">\r\n                        <Switch>\r\n                            <Route path=\"/register\" component={RegisterForm} />\r\n                            <Route path=\"/login\" component={LoginForm} />\r\n                            <Route path=\"/\" component={Homepage} />\r\n                        </Switch>\r\n                    </div>\r\n                    </div>\r\n                </div> \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LandingPage;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Logo from '../images/scribbliatorLogo.png';\r\n\r\nimport $appStat from '../compService/scribbliatorService';\r\n\r\nclass NavigationBarMember extends Component {\r\n    logout = ( ) => {\r\n        $appStat.logoutUser( );\r\n        window.location.reload( );\r\n    }\r\n\r\n    render( ) {\r\n        const { appTitle } = this.props;\r\n\r\n        return (\r\n            <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\r\n                <NavLink className=\"navbar-brand\" to=\"/\">\r\n                    <img className=\"main-logo\" src={Logo} alt={`${appTitle} Homepage`}/>\r\n                </NavLink>\r\n\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mainNav\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"mainNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/\">My Workbench</NavLink>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/profile\">Profile</NavLink>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/setting\">Settings</NavLink>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/\" onClick={this.logout}>Logout</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavigationBarMember;","import React, { Component } from 'react';\r\n\r\nclass ProfilePage extends Component {\r\n    render( ) {\r\n        return( \r\n            <h1>Profile Page</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfilePage;","import React, { Component } from 'react';\r\n\r\nclass SettingPage extends Component {\r\n    render( ) {\r\n        return( \r\n            <h1>Setting Page</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SettingPage;","import React, { Component } from 'react';\r\n\r\nclass ScribbliatorApp extends Component {\r\n    render( ) {\r\n        return( \r\n            <h1>Scribbliator Main Application</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScribbliatorApp;","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport NavigationBarMember from '../component/navigationMember';\r\nimport ProfilePage from '../component/profile';\r\nimport SettingPage from '../component/setting';\r\nimport ScribbliatorApp from '../component/scribbliator';\r\n\r\nclass MemberPage extends Component {\r\n    render( ) {\r\n        return (\r\n            <React.Fragment>\r\n                <NavigationBarMember appTitle={`Member Area`} /> \r\n\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col splash-screen\">\r\n                    <div className=\"scribbliator-homepage\">\r\n                        <Switch>\r\n                            <Route path=\"/setting\" component={SettingPage} />\r\n                            <Route path=\"/profile\" component={ProfilePage} />\r\n                            <Route path=\"/\" component={ScribbliatorApp} />\r\n                        </Switch>\r\n                    </div>\r\n                    </div>\r\n                </div> \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MemberPage;","import React, { Component } from 'react';\n\nimport LandingPage from './comPage/landingPage';\nimport MemberPage from \"./comPage/memberPage\";\n\nimport $appState from './compService/scribbliatorService';\n\nimport './css/App.css';\n\n\nclass App extends Component {\n  state = { \n  };\n\n  render( ) {\n    return (\n      <div className=\"container-fluid\">\n        { $appState.isUserLogin( ) \n          ?<MemberPage />\n          :<LandingPage />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as MainRoute } from 'react-router-dom';\n\nimport './css/index.css';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <MainRoute>\n        <App />\n    </MainRoute>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}