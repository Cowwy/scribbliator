{"version":3,"sources":["images/scribbliatorLogo.png","common/h1Title.jsx","common/loginComp.jsx","component/footer.jsx","component/form.jsx","component/login.jsx","common/splash.jsx","component/home.jsx","common/registerComp.jsx","component/register.jsx","component/navigationBar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","H1Title","title","this","props","className","Component","LoginComp","state","errors","onSubmit","onChange","username","password","placeholder","type","id","value","to","Footer","Form","data","validate","e","error","Joi","schema","abortEarly","details","item","path","msg","message","validateProperty","field","submitHandler","preventDefault","setState","console","log","changeHandler","input","currentTarget","errorMsg","React","LoginForm","string","email","required","min","Fragment","Splash","Homepage","RegisterComp","RegisterForm","NavigationBar","appTitle","src","Logo","alt","data-toggle","data-target","App","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ef6871e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/scribbliatorLogo.8b3ffbd6.png\";","import React, { Component } from 'react';\r\n\r\nclass H1Title extends Component {\r\n    render( ) {\r\n        const { title } = this.props;\r\n\r\n        return( \r\n            <h1 className=\"appTitle\">{title}</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default H1Title;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass LoginComp extends Component {\r\n    state = {\r\n        errors : {}\r\n    };\r\n\r\n    render( ) {\r\n        const { errors, onSubmit, onChange } = this.props;\r\n        const { username, password } = errors;\r\n\r\n        return( \r\n            <div className=\"row\">\r\n                <div className=\"col-lg\"></div>\r\n                <div className=\"col-lg-5\">\r\n                    <form onSubmit={onSubmit}>\r\n                        <div className=\"form-group row\">                                        \r\n                            <div className=\"col-sm-12\">\r\n                                <input \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Email\" \r\n                                    type=\"text\" \r\n                                    id=\"username\" \r\n                                    onChange={onChange}\r\n                                />\r\n                                { username && <div className=\"alert alert-danger text-left\">{username}</div> }\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-12\">\r\n                                <input \r\n                                    type=\"password\" \r\n                                    className=\"form-control\" \r\n                                    id=\"password\" \r\n                                    placeholder=\"Password\"\r\n                                    onChange={onChange}\r\n                                />\r\n                                { password && <div className=\"alert alert-danger text-left\">{password}</div> }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-12\">\r\n                                <button \r\n                                    className=\"w-100 btn btn-primary\" \r\n                                    type=\"submit\" \r\n                                    value=\"Login\">Login\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-12 white-shadow\">\r\n                                <Link to=\"/\">Forgot Password?</Link>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-lg\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginComp;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render( ) {\r\n        return(\r\n            <footer className=\"main-footer white-shadow\">\r\n                Copyright &copy; 2020 | Scribbliator | Designed By: Frankie Law\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport Joi from 'joi-browser';\r\n\r\nclass Form extends React.Component {\r\n    state = {\r\n        data   : {},\r\n        errors : {}\r\n    };\r\n \r\n    //THIS METHOD VALIDATES EVERYTHING\r\n    //EITHER THERE IS 1 ERROR OR NO ERROR\r\n    validate = ( e ) => {\r\n        //VALIDATE ALL INPUT\r\n        const options    = { abortEarly: false };\r\n        const { error } = Joi.validate( this.state.data, this.schema, options );\r\n        \r\n        // CHECK FOR ERRORS\r\n        if( !error ) return null;\r\n        else {\r\n            let errors = {};\r\n\r\n            for( let item of error.details ) {\r\n                const path = item.path;\r\n                const msg  = item.message;\r\n\r\n                errors[path] = msg;\r\n            }\r\n\r\n            return errors;\r\n        }\r\n    }\r\n\r\n\r\n    validateProperty = ( { id, value } ) => {\r\n        const field  = { [id] : value };\r\n        const schema = { [id] : this.schema[id] };\r\n        const { error } = Joi.validate( field, schema );\r\n\r\n        return error ? error.details[0].message : null;\r\n    }\r\n\r\n\r\n    submitHandler = ( e ) => {\r\n        e.preventDefault( );\r\n        const errors = this.validate( e );\r\n        this.setState( { errors : errors || {} } ); //ERRORS TRUSEY OR GIVE EMPTY OBJECT\r\n\r\n        if( errors ) return;\r\n\r\n        console.log( \"Form submitted\" );\r\n    }\r\n\r\n    changeHandler = ( { currentTarget : input } ) => {\r\n        // RETRIEVE CURRENT STATE DATA\r\n        const errors = { ...this.state.errors };\r\n        const data   = { ...this.state.data };\r\n\r\n        //VALIDATE INPUT\r\n        const errorMsg = this.validateProperty( input );  //Contains one specific message\r\n\r\n        // CHECK FOR ERRORS\r\n        if( errorMsg ) errors[ input.id ] = errorMsg;\r\n        else delete errors[ input.id ];\r\n\r\n        // TRANSFER STATE DATA\r\n        data[input.id] = input.value;\r\n\r\n        // SETSTATE FOR BOTH DATA AND ERRORS\r\n        this.setState( { data, errors } );\r\n    }\r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\n\r\nimport H1Title from '../common/h1Title';\r\nimport LoginComp from '../common/loginComp';\r\nimport Footer from './footer';\r\nimport Form from  './form';\r\n\r\nclass LoginForm extends Form {\r\n    state = {\r\n        data : { username : \"\", password : \"\" },\r\n        errors : {}\r\n    };\r\n\r\n    schema = {\r\n        username : Joi.string( ).email( ).required( ),\r\n        password : Joi.string( ).min(6).required( )\r\n    };\r\n\r\n    render( ) {\r\n        return(\r\n            <React.Fragment>\r\n                <H1Title title=\"Login\" />\r\n\r\n                <LoginComp \r\n                    errors={this.state.errors}\r\n                    onSubmit={this.submitHandler}\r\n                    onChange={this.changeHandler}\r\n                />\r\n\r\n                <Footer /> \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import React, { Component } from 'react';\r\n\r\nclass Splash extends Component {\r\n    render( ) {        \r\n        return( \r\n            <div className=\"row\">\r\n                <div className=\"col-lg\"></div>\r\n                <div className=\"col-lg-8\">\r\n                    <p className=\"slogan white-shadow\">\r\n                        100% Privacy with Web Notebook.<br/>\r\n                        Local friendly notebook organizer\r\n                    </p>\r\n                </div>\r\n                <div className=\"col-lg\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Splash;","import React, { Component } from 'react';\r\n\r\nimport Footer from './footer';\r\nimport Splash from '../common/splash';\r\nimport H1Title from '../common/h1Title';\r\n\r\nclass Homepage extends Component {\r\n    render( ) {        \r\n        return( \r\n            <React.Fragment>\r\n                <H1Title title=\"Scribbliator\" />\r\n                \r\n                <Splash />\r\n\r\n                <Footer /> \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Homepage;","import React, { Component } from 'react';\r\n\r\nclass RegisterComp extends Component {\r\n    render( ) {\r\n        const { errors, onSubmit, onChange } = this.props;\r\n        const { username, password } = errors;\r\n\r\n        return( \r\n            <div className=\"row\">\r\n                <div className=\"col-lg\"></div>\r\n                <div className=\"col-lg-5\">\r\n                    <form onSubmit={onSubmit}>\r\n                        <div className=\"form-group row\">                                        \r\n                            <div className=\"col-sm-12\">\r\n                                <input \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Email\" \r\n                                    type=\"text\" \r\n                                    id=\"username\" \r\n                                    onChange={onChange}\r\n                                />\r\n                                { username && <div className=\"alert alert-danger text-left\">{username}</div> }\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-12\">\r\n                                <input \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Password\" \r\n                                    type=\"password\" \r\n                                    id=\"password\" \r\n                                    onChange={onChange}\r\n                                />\r\n                                { password && <div className=\"alert alert-danger text-left\">{password}</div> }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-12\">\r\n                                <button type=\"submit\" className=\"w-100 btn btn-primary\" value=\"Login\">Sign Up</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n                            <div className=\"col-sm-12 text-left white-shadow\">\r\n                                By clicking Sign Up, you agree to our Terms and that you have \r\n                                read our Data Use Policy, including our Cookie Use.\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-lg\">\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterComp;","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\n\r\nimport H1Title from '../common/h1Title';\r\nimport RegisterComp from '../common/registerComp';\r\nimport Footer from './footer';\r\nimport Form from './form';\r\n\r\nclass RegisterForm extends Form {\r\n    state = {\r\n        data : { username : \"\", password : \"\" },\r\n        errors : {}\r\n    };\r\n\r\n    schema = {\r\n        username : Joi.string( ).email( ).required( ),\r\n        password : Joi.string( ).min(6).required( )\r\n    };\r\n\r\n    render( ) {\r\n        return( \r\n            <React.Fragment>\r\n                <H1Title title=\"Sign Up\" />\r\n\r\n                <RegisterComp \r\n                    errors={this.state.errors}\r\n                    onSubmit={this.submitHandler}\r\n                    onChange={this.changeHandler}\r\n                />\r\n\r\n                <Footer />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterForm;","import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Logo from '../images/scribbliatorLogo.png';\r\n\r\n\r\nclass NavigationBar extends Component {\r\n    render( ) {\r\n        const { appTitle } = this.props;\r\n\r\n        return (\r\n            <nav className=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\r\n                <NavLink className=\"navbar-brand\" to=\"/\">\r\n                    <img className=\"main-logo\" src={Logo} alt={`${appTitle} Homepage`}/>\r\n                </NavLink>\r\n\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mainNav\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"mainNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <NavLink className=\"nav-link\" to=\"/register\">Sign Up</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavigationBar;","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport LoginForm from './component/login';\nimport Homepage from './component/home';\nimport RegisterForm from './component/register';\n\nimport NavigationBar from './component/navigationBar';\n\nimport './css/App.css';\n\n\nclass App extends Component {\n  state = { \n  };\n\n  render( ) {\n    return (\n      <div className=\"container-fluid\">\n        <NavigationBar appTitle={`Scribbliator`} /> \n\n        <div className=\"row h-100\">\n          <div className=\"col splash-screen\">\n            <div className=\"scribbliator-homepage\">\n              <Switch>\n                <Route path=\"/register\" component={RegisterForm} />\n                <Route path=\"/login\" component={LoginForm} />\n                <Route path=\"/\" component={Homepage} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as MainRoute } from 'react-router-dom';\n\nimport './css/index.css';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <MainRoute>\n        <App />\n    </MainRoute>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}